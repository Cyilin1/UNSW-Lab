z5450298@vx16:~/Desktop/basin$ 1092 autotest basin S1
./check_features_used.sh basin.c
dcc --leak-check -o basin *.c # basin.c
Test S1_0 (S1: just_empty.tabi <- empty) - passed
Test S1_1 (S1: files.tabi <- empty, short.txt, emojis.txt) - failed (Incorrect output)
Your program produced these 29 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../files.tabi empty short.txt emojis.txt
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2939631381

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../files.tabi", in_filenames=0x7ffd31bb56f0, num_in_filenames=3) called at line 56 of basin_main.c
main(argc=6, argv=0x7ffd31bb56d8)



The correct 34 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../files.tabi empty short.txt emojis.txt
$ 1521 basin-show ../files.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    03                       dec 3
============================= Record   0 ==============================
pathname len       0x00000005    05 00                    dec 5
pathname           0x00000007    65 6d 70 74 79           chr empty
num blocks         0x0000000c    00 00 00                 dec 0
============================= Record   1 ==============================
pathname len       0x0000000f    09 00                    dec 9
pathname           0x00000011    73 68 6f 72 74 2e 74 78  chr short.tx
                   0x00000019    74                       chr t
num blocks         0x0000001a    01 00 00                 dec 1
hashes[0]          0x0000001d    15 b8 4c 98 fe c3 b7 d6  chr ..L.....
============================= Record   2 ==============================
pathname len       0x00000025    0a 00                    dec 10
pathname           0x00000027    65 6d 6f 6a 69 73 2e 74  chr emojis.t
                   0x0000002f    78 74                    chr xt
num blocks         0x00000031    03 00 00                 dec 3
hashes[0]          0x00000034    90 30 e3 14 6e e7 0a 90  chr .0..n...
hashes[1]          0x0000003c    91 90 5c 46 fc 07 b3 93  chr ..\\F....
hashes[2]          0x00000044    8c ec 01 86 4c dc 63 af  chr ....L.c.
$ hexdump -vC ../files.tabi
00000000  54 41 42 49 03 05 00 65  6d 70 74 79 00 00 00 09  |TABI...empty....|
00000010  00 73 68 6f 72 74 2e 74  78 74 01 00 00 15 b8 4c  |.short.txt.....L|
00000020  98 fe c3 b7 d6 0a 00 65  6d 6f 6a 69 73 2e 74 78  |.......emojis.tx|
00000030  74 03 00 00 90 30 e3 14  6e e7 0a 90 91 90 5c 46  |t....0..n.....\\F|
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../files.tabi empty short.txt emojis.txt
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2939631381
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../files.tabi", in_filenames=0x7ffd31bb56f0, num_in_filenames=3) called at line 56 of basin_main.c
- main(argc=6, argv=0x7ffd31bb56d8)
- 
- 
+ $ 1521 basin-show ../files.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../files.tabi empty short.txt emojis.txt
1521 basin-show ../files.tabi
hexdump -vC ../files.tabi

Test S1_2 (S1: my_text_files.tabi <- empty, short.txt, emojis.txt, lyrics.txt) - failed (Incorrect output)
Your program produced these 29 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../my_text_files.tabi empty short.txt emojis.txt lyrics.txt
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2939631381

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../my_text_files.tabi", in_filenames=0x7fffe4df75d0, num_in_filenames=4) called at line 56 of basin_main.c
main(argc=7, argv=0x7fffe4df75b8)



The correct 102 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../my_text_files.tabi empty short.txt emojis.txt lyrics.txt
$ 1521 basin-show ../my_text_files.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    04                       dec 4
============================= Record   0 ==============================
pathname len       0x00000005    05 00                    dec 5
pathname           0x00000007    65 6d 70 74 79           chr empty
num blocks         0x0000000c    00 00 00                 dec 0
============================= Record   1 ==============================
pathname len       0x0000000f    09 00                    dec 9
pathname           0x00000011    73 68 6f 72 74 2e 74 78  chr short.tx
                   0x00000019    74                       chr t
num blocks         0x0000001a    01 00 00                 dec 1
hashes[0]          0x0000001d    15 b8 4c 98 fe c3 b7 d6  chr ..L.....
============================= Record   2 ==============================
pathname len       0x00000025    0a 00                    dec 10
pathname           0x00000027    65 6d 6f 6a 69 73 2e 74  chr emojis.t
                   0x0000002f    78 74                    chr xt
num blocks         0x00000031    03 00 00                 dec 3
hashes[0]          0x00000034    90 30 e3 14 6e e7 0a 90  chr .0..n...
hashes[1]          0x0000003c    91 90 5c 46 fc 07 b3 93  chr ..\\F....
hashes[2]          0x00000044    8c ec 01 86 4c dc 63 af  chr ....L.c.
============================= Record   3 ==============================
pathname len       0x0000004c    0a 00                    dec 10
pathname           0x0000004e    6c 79 72 69 63 73 2e 74  chr lyrics.t
                   0x00000056    78 74                    chr xt
num blocks         0x00000058    29 00 00                 dec 41
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../my_text_files.tabi empty short.txt emojis.txt lyrics.txt
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2939631381
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../my_text_files.tabi", in_filenames=0x7fffe4df75d0, num_in_filenames=4) called at line 56 of basin_main.c
- main(argc=7, argv=0x7fffe4df75b8)
- 
- 
+ $ 1521 basin-show ../my_text_files.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../my_text_files.tabi empty short.txt emojis.txt lyrics.txt
1521 basin-show ../my_text_files.tabi
hexdump -vC ../my_text_files.tabi

Test S1_3 (S1: binaries.tabi <- fractal_bin, little_endian_shorts) - failed (Incorrect output)
Your program produced these 34 lines of output:
/===================================================================
| NOTE: this test uses bigger or more complicated files. If you're |
|       failing other simpler tests for this subset, it's probably |
|       easier to debug those first, before this one.              |
===================================================================/
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../binaries.tabi fractal_bin little_endian_shorts
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=1136986548, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 1136986548

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=1136986548, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../binaries.tabi", in_filenames=0x7ffe177884a0, num_in_filenames=2) called at line 56 of basin_main.c
main(argc=5, argv=0x7ffe17788488)
...


The correct 426 lines of output for this test were:
/===================================================================
| NOTE: this test uses bigger or more complicated files. If you're |
|       failing other simpler tests for this subset, it's probably |
|       easier to debug those first, before this one.              |
===================================================================/
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../binaries.tabi fractal_bin little_endian_shorts
$ 1521 basin-show ../binaries.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    02                       dec 2
============================= Record   0 ==============================
pathname len       0x00000005    0b 00                    dec 11
pathname           0x00000007    66 72 61 63 74 61 6c 5f  chr fractal_
                   0x0000000f    62 69 6e                 chr bin
num blocks         0x00000012    06 00 00                 dec 6
hashes[0]          0x00000015    b4 09 c5 43 7f f3 b8 5c  chr ...C...\\
hashes[1]          0x0000001d    83 f9 cf 1b 14 9a b8 cd  chr ........
hashes[2]          0x00000025    91 7d 6e 30 37 54 32 3a  chr .}n07T2:
hashes[3]          0x0000002d    73 ea 03 82 4b 8f 6a 3a  chr s...K.j:
hashes[4]          0x00000035    3c 90 bf 04 5d a0 bb 60  chr <...]..`
hashes[5]          0x0000003d    b6 e7 05 7a 33 b5 95 1a  chr ...z3...
============================= Record   1 ==============================
pathname len       0x00000045    14 00                    dec 20
pathname           0x00000047    6c 69 74 74 6c 65 5f 65  chr little_e
                   0x0000004f    6e 64 69 61 6e 5f 73 68  chr ndian_sh
                   0x00000057    6f 72 74 73              chr orts
num blocks         0x0000005b    02 01 00                 dec 258
hashes[0]          0x0000005e    25 24 94 72 a2 72 7e 0f  chr %$.r.r~.
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../binaries.tabi fractal_bin little_endian_shorts
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=1136986548, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 1136986548
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=1136986548, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../binaries.tabi", in_filenames=0x7ffe177884a0, num_in_filenames=2) called at line 56 of basin_main.c
- main(argc=5, argv=0x7ffe17788488)
- 
- 
+ $ 1521 basin-show ../binaries.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../binaries.tabi fractal_bin little_endian_shorts
1521 basin-show ../binaries.tabi
hexdump -vC ../binaries.tabi

Test S1_4 (S1: fizz_buzz.tabi <- fizz/buzz.c, fizz/buzz.golfed.py, fizz/buzz.hs, fizz/buzz.mips.s, fizz/buzz.rs, fizz/buzz.x64.s) - failed (Incorrect output)
Your program produced these 29 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../fizz_buzz.tabi fizz/buzz.c fizz/buzz.golfed.py fizz/buzz.hs fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2906355917

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../fizz_buzz.tabi", in_filenames=0x7ffd8fd5e600, num_in_filenames=6) called at line 56 of basin_main.c
main(argc=9, argv=0x7ffd8fd5e5e8)



The correct 74 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../fizz_buzz.tabi fizz/buzz.c fizz/buzz.golfed.py fizz/buzz.hs fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s
$ 1521 basin-show ../fizz_buzz.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    06                       dec 6
============================= Record   0 ==============================
pathname len       0x00000005    0b 00                    dec 11
pathname           0x00000007    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
                   0x0000000f    7a 2e 63                 chr z.c
num blocks         0x00000012    02 00 00                 dec 2
hashes[0]          0x00000015    cd 78 3b ad 53 bc bc e0  chr .x;.S...
hashes[1]          0x0000001d    7f 99 2e e9 97 15 1a 87  chr ........
============================= Record   1 ==============================
pathname len       0x00000025    13 00                    dec 19
pathname           0x00000027    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
                   0x0000002f    7a 2e 67 6f 6c 66 65 64  chr z.golfed
                   0x00000037    2e 70 79                 chr .py
num blocks         0x0000003a    01 00 00                 dec 1
hashes[0]          0x0000003d    72 bc 57 01 52 6f 27 01  chr r.W.Ro'.
============================= Record   2 ==============================
pathname len       0x00000045    0c 00                    dec 12
pathname           0x00000047    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
                   0x0000004f    7a 2e 68 73              chr z.hs
num blocks         0x00000053    01 00 00                 dec 1
hashes[0]          0x00000056    9d 3e b9 46 27 98 d7 a8  chr .>.F'...
============================= Record   3 ==============================
pathname len       0x0000005e    10 00                    dec 16
pathname           0x00000060    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../fizz_buzz.tabi fizz/buzz.c fizz/buzz.golfed.py fizz/buzz.hs fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2906355917
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../fizz_buzz.tabi", in_filenames=0x7ffd8fd5e600, num_in_filenames=6) called at line 56 of basin_main.c
- main(argc=9, argv=0x7ffd8fd5e5e8)
- 
- 
+ $ 1521 basin-show ../fizz_buzz.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../fizz_buzz.tabi fizz/buzz.c fizz/buzz.golfed.py fizz/buzz.hs fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s
1521 basin-show ../fizz_buzz.tabi
hexdump -vC ../fizz_buzz.tabi

Test S1_5 (S1: everything.tabi <- fizz/buzz.c, fizz/buzz.golfed.py, empty, fizz/buzz.hs, fractal_bin, little_endian_shorts, lyrics.txt, fizz/buzz.mips.s, fizz/buzz.rs, fizz/buzz.x64.s, emojis.txt, short.txt) - failed (Incorrect output)
Your program produced these 34 lines of output:
/===================================================================
| NOTE: this test uses bigger or more complicated files. If you're |
|       failing other simpler tests for this subset, it's probably |
|       easier to debug those first, before this one.              |
===================================================================/
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../everything.tabi fizz/buzz.c fizz/buzz.golfed.py empty fizz/buzz.hs fractal_bin little_endian_shorts lyrics.txt fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s emojis.txt short.txt
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2906355917

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../everything.tabi", in_filenames=0x7ffccab017b0, num_in_filenames=12) called at line 56 of basin_main.c
main(argc=15, argv=0x7ffccab01798)
...


The correct 578 lines of output for this test were:
/===================================================================
| NOTE: this test uses bigger or more complicated files. If you're |
|       failing other simpler tests for this subset, it's probably |
|       easier to debug those first, before this one.              |
===================================================================/
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../everything.tabi fizz/buzz.c fizz/buzz.golfed.py empty fizz/buzz.hs fractal_bin little_endian_shorts lyrics.txt fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s emojis.txt short.txt
$ 1521 basin-show ../everything.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    0c                       dec 12
============================= Record   0 ==============================
pathname len       0x00000005    0b 00                    dec 11
pathname           0x00000007    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
                   0x0000000f    7a 2e 63                 chr z.c
num blocks         0x00000012    02 00 00                 dec 2
hashes[0]          0x00000015    cd 78 3b ad 53 bc bc e0  chr .x;.S...
hashes[1]          0x0000001d    7f 99 2e e9 97 15 1a 87  chr ........
============================= Record   1 ==============================
pathname len       0x00000025    13 00                    dec 19
pathname           0x00000027    66 69 7a 7a 2f 62 75 7a  chr fizz/buz
                   0x0000002f    7a 2e 67 6f 6c 66 65 64  chr z.golfed
                   0x00000037    2e 70 79                 chr .py
num blocks         0x0000003a    01 00 00                 dec 1
hashes[0]          0x0000003d    72 bc 57 01 52 6f 27 01  chr r.W.Ro'.
============================= Record   2 ==============================
pathname len       0x00000045    05 00                    dec 5
pathname           0x00000047    65 6d 70 74 79           chr empty
num blocks         0x0000004c    00 00 00                 dec 0
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../everything.tabi fizz/buzz.c fizz/buzz.golfed.py empty fizz/buzz.hs fractal_bin little_endian_shorts lyrics.txt fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s emojis.txt short.txt
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2906355917
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2906355917, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../everything.tabi", in_filenames=0x7ffccab017b0, num_in_filenames=12) called at line 56 of basin_main.c
- main(argc=15, argv=0x7ffccab01798)
- 
- 
+ $ 1521 basin-show ../everything.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../everything.tabi fizz/buzz.c fizz/buzz.golfed.py empty fizz/buzz.hs fractal_bin little_endian_shorts lyrics.txt fizz/buzz.mips.s fizz/buzz.rs fizz/buzz.x64.s emojis.txt short.txt
1521 basin-show ../everything.tabi
hexdump -vC ../everything.tabi

Test S1_6 (S1: long.tabi <- empty, [long_path], emojis.txt) - failed (Incorrect output)
Your program produced these 29 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../long.tabi empty ./long_path/this_is_a/very_long/sequence_of/nested/subdirectories/designed_to/check_whether/your_implementation/can_correctly/handle/long/path/names/.you/may/want/to/use/the/tab/key/if/you/are/typing/this/into/a/terminal/otherwise/you/can/just/copy/paste/this/path/finally_done.txt emojis.txt
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=1569258541, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 1569258541

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=1569258541, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../long.tabi", in_filenames=0x7ffd77bb1480, num_in_filenames=3) called at line 56 of basin_main.c
main(argc=6, argv=0x7ffd77bb1468)



The correct 85 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../long.tabi empty ./long_path/this_is_a/very_long/sequence_of/nested/subdirectories/designed_to/check_whether/your_implementation/can_correctly/handle/long/path/names/.you/may/want/to/use/the/tab/key/if/you/are/typing/this/into/a/terminal/otherwise/you/can/just/copy/paste/this/path/finally_done.txt emojis.txt
$ 1521 basin-show ../long.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    03                       dec 3
============================= Record   0 ==============================
pathname len       0x00000005    05 00                    dec 5
pathname           0x00000007    65 6d 70 74 79           chr empty
num blocks         0x0000000c    00 00 00                 dec 0
============================= Record   1 ==============================
pathname len       0x0000000f    19 01                    dec 281
pathname           0x00000011    2e 2f 6c 6f 6e 67 5f 70  chr ./long_p
                   0x00000019    61 74 68 2f 74 68 69 73  chr ath/this
                   0x00000021    5f 69 73 5f 61 2f 76 65  chr _is_a/ve
                   0x00000029    72 79 5f 6c 6f 6e 67 2f  chr ry_long/
                   0x00000031    73 65 71 75 65 6e 63 65  chr sequence
                   0x00000039    5f 6f 66 2f 6e 65 73 74  chr _of/nest
                   0x00000041    65 64 2f 73 75 62 64 69  chr ed/subdi
                   0x00000049    72 65 63 74 6f 72 69 65  chr rectorie
                   0x00000051    73 2f 64 65 73 69 67 6e  chr s/design
                   0x00000059    65 64 5f 74 6f 2f 63 68  chr ed_to/ch
                   0x00000061    65 63 6b 5f 77 68 65 74  chr eck_whet
                   0x00000069    68 65 72 2f 79 6f 75 72  chr her/your
                   0x00000071    5f 69 6d 70 6c 65 6d 65  chr _impleme
                   0x00000079    6e 74 61 74 69 6f 6e 2f  chr ntation/
                   0x00000081    63 61 6e 5f 63 6f 72 72  chr can_corr
                   0x00000089    65 63 74 6c 79 2f 68 61  chr ectly/ha
                   0x00000091    6e 64 6c 65 2f 6c 6f 6e  chr ndle/lon
...


The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../long.tabi empty ./long_path/this_is_a/very_long/sequence_of/nested/subdirectories/designed_to/check_whether/your_implementation/can_correctly/handle/long/path/names/.you/may/want/to/use/the/tab/key/if/you/are/typing/this/into/a/terminal/otherwise/you/can/just/copy/paste/this/path/finally_done.txt emojis.txt
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=1569258541, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 1569258541
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=1569258541, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../long.tabi", in_filenames=0x7ffd77bb1480, num_in_filenames=3) called at line 56 of basin_main.c
- main(argc=6, argv=0x7ffd77bb1468)
- 
- 
+ $ 1521 basin-show ../long.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../long.tabi empty ./long_path/this_is_a/very_long/sequence_of/nested/subdirectories/designed_to/check_whether/your_implementation/can_correctly/handle/long/path/names/.you/may/want/to/use/the/tab/key/if/you/are/typing/this/into/a/terminal/otherwise/you/can/just/copy/paste/this/path/finally_done.txt emojis.txt
1521 basin-show ../long.tabi
hexdump -vC ../long.tabi

Test S1_7 (S1: just_short.tabi <- short.txt) - failed (Incorrect output)
Your program produced these 29 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../just_short.tabi short.txt
*** error: the above command exited with return-code -13 and outputted the following to stderr:

Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2939631381

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../just_short.tabi", in_filenames=0x7fffcd5d0b70, num_in_filenames=1) called at line 56 of basin_main.c
main(argc=4, argv=0x7fffcd5d0b58)



The correct 19 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../just_short.tabi short.txt
$ 1521 basin-show ../just_short.tabi
Field name         Offset        Bytes                    ASCII/Numeric
-----------------------------------------------------------------------
magic              0x00000000    54 41 42 49              chr TABI
num records        0x00000004    01                       dec 1
============================= Record   0 ==============================
pathname len       0x00000005    09 00                    dec 9
pathname           0x00000007    73 68 6f 72 74 2e 74 78  chr short.tx
                   0x0000000f    74                       chr t
num blocks         0x00000010    01 00 00                 dec 1
hashes[0]          0x00000013    15 b8 4c 98 fe c3 b7 d6  chr ..L.....
$ hexdump -vC ../just_short.tabi
00000000  54 41 42 49 01 09 00 73  68 6f 72 74 2e 74 78 74  |TABI...short.txt|
00000010  01 00 00 15 b8 4c 98 fe  c3 b7 d6                 |.....L.....|
0000001b

The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../just_short.tabi short.txt
+ $ 1521 basin-show ../just_short.tabi
+ Field name         Offset        Bytes                    ASCII/Numeric
+ -----------------------------------------------------------------------
+ magic              0x00000000    54 41 42 49              chr TABI
+ num records        0x00000004    01                       dec 1
+ ============================= Record   0 ==============================
+ pathname len       0x00000005    09 00                    dec 9
+ pathname           0x00000007    73 68 6f 72 74 2e 74 78  chr short.tx
+                    0x0000000f    74                       chr t
+ num blocks         0x00000010    01 00 00                 dec 1
+ hashes[0]          0x00000013    15 b8 4c 98 fe c3 b7 d6  chr ..L.....
+ $ hexdump -vC ../just_short.tabi
+ 00000000  54 41 42 49 01 09 00 73  68 6f 72 74 2e 74 78 74  |TABI...short.txt|
+ 00000010  01 00 00 15 b8 4c 98 fe  c3 b7 d6                 |.....L.....|
+ 0000001b
- *** error: the above command exited with return-code -13 and outputted the following to stderr:
- 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../just_short.tabi short.txt
1521 basin-show ../just_short.tabi
hexdump -vC ../just_short.tabi

Test S1_8 (S1: error handling: simple file not found) - passed
Test S1_9 (S1: error handling: good files, then file not found) - failed (Incorrect output)
Your program produced these 28 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../out.tabi empty short.txt this_does_not_exist
*** error: the above command correctly failed, but it should have exited with return code 1 instead of -13. It outputted this to stderr: 
Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2939631381

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../out.tabi", in_filenames=0x7ffe34627590, num_in_filenames=3) called at line 56 of basin_main.c
main(argc=6, argv=0x7ffe34627578)



The correct 5 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../out.tabi empty short.txt this_does_not_exist
The above command failed successfully.

The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../out.tabi empty short.txt this_does_not_exist
+ The above command failed successfully.
- *** error: the above command correctly failed, but it should have exited with return code 1 instead of -13. It outputted this to stderr: 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2939631381
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../out.tabi", in_filenames=0x7ffe34627590, num_in_filenames=3) called at line 56 of basin_main.c
- main(argc=6, argv=0x7ffe34627578)
- 
- 

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../out.tabi empty short.txt this_does_not_exist # should fail

Test S1_10 (S1: error handling: file exists but permission denied) - failed (Incorrect output)
Your program produced these 28 lines of output:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../out.tabi empty short.txt /proc/kcore
*** error: the above command correctly failed, but it should have exited with return code 1 instead of -13. It outputted this to stderr: 
Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:

{
    for (size_t i = 0; i < bytes; i++)
    {
-->     fputc((value >> (i * 8)) & 0xFF, file);
    }
}

Values when execution stopped:

bytes = 8
i = 4
value = 2939631381

Function call traceback:

WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
stage_1(out_filename="../out.tabi", in_filenames=0x7ffdb5a26a30, num_in_filenames=3) called at line 56 of basin_main.c
main(argc=6, argv=0x7ffdb5a26a18)



The correct 5 lines of output for this test were:
$ 1521 basin-examples
$ cd examples
$ cd aaa
$ ../../basin --stage-1 ../out.tabi empty short.txt /proc/kcore
The above command failed successfully.

The difference between your output(-) and the correct output(+) is:
...
  $ ../../basin --stage-1 ../out.tabi empty short.txt /proc/kcore
+ The above command failed successfully.
- *** error: the above command correctly failed, but it should have exited with return code 1 instead of -13. It outputted this to stderr: 
- Runtime error: shift exponent 32 is too large for 32-bit type 'unsigned int'
- Execution stopped in WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) in basin.c at line 30:
- 
- {
-     for (size_t i = 0; i < bytes; i++)
-     {
- -->     fputc((value >> (i * 8)) & 0xFF, file);
-     }
- }
- 
- Values when execution stopped:
- 
- bytes = 8
- i = 4
- value = 2939631381
- 
- Function call traceback:
- 
- WriteLittleEndian(file=0x615000000080, value=2939631381, bytes=8) called at line 96 of basin.c
- stage_1(out_filename="../out.tabi", in_filenames=0x7ffdb5a26a30, num_in_filenames=3) called at line 56 of basin_main.c
- main(argc=6, argv=0x7ffdb5a26a18)
- 
- 

The input for this test was:
1521 basin-examples
cd examples
cd aaa
../../basin --stage-1 ../out.tabi empty short.txt /proc/kcore # should fail

2 tests passed 9 tests failed
Don't understand why test S1_1 failed?  Get AI-generated help by running: autotest-help
z5450298@vx16:~/Desktop/basin$ 